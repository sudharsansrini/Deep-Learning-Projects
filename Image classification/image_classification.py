# -*- coding: utf-8 -*-
"""image_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x43ph5NEyLEKAovaKUnFAiEFRxeYiTV1
"""

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
import numpy as np

tf.config.experimental.list_physical_devices()

tf.test.is_built_with_cuda()

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()

classes = ["airplane", "automobile", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]


plt.figure(figsize=(10, 1))
plt.imshow(x_train[1])

x_train = x_train/255
x_test = x_test/255

y_train_categorical = keras.utils.to_categorical(y_train, num_classes=10, dtype='float32')
y_test_categorical = keras.utils.to_categorical(y_test, num_classes=10, dtype='float32')

model = keras.Sequential([
                          keras.layers.Flatten(input_shape = (32, 32, 3)),
                          keras.layers.Dense(3000, activation='relu'),
                          keras.layers.Dense(10, activation='sigmoid')

])

model.compile(optimizer='adam', 
              loss='categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train_categorical, epochs=10)

print(classes[np.argmax(model.predict(x_test)[1])])

print(classes[y_test[1][0]])